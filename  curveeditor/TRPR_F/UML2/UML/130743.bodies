class ChoiceArea
!!!151735.java!!!	ChoiceArea(inout listener : ActionListener, inout itemListener : ItemListener)
		super(new BorderLayout());
		this.listener = listener;
		this.itemListener = itemListener;
		currentAlgTypeNames = bezierAlgTypeNames;
		init();
!!!151863.java!!!	init() : void
		setSize();

		add(Box.createRigidArea(new Dimension(10, 0)));
		setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));

		add(Box.createRigidArea(new Dimension(5, 5)));
		createRadioPanel();
		// add(Box.createRigidArea(new Dimension(0, 5)));
		// createComboBox();
		add(Box.createRigidArea(new Dimension(5, 5)));
		createInputField();
		add(Box.createRigidArea(new Dimension(5, 5)));
		createEditPanel();
		add(Box.createRigidArea(new Dimension(5, 5)));
		createCheckBox();

		add(Box.createVerticalGlue());

		setBorder(BorderFactory.createMatteBorder(0, 0, 0, 5, Color.BLACK));
!!!151991.java!!!	toggleEditPanel(inout value : boolean) : void
		if (value) {
			pointEditPanel.setVisible(false);
			curveEditPanel.setVisible(true);
			return;
		}

		pointEditPanel.setVisible(true);
		curveEditPanel.setVisible(false);
!!!152119.java!!!	deselect() : void
		pointEditPanel.setVisible(false);
		curveEditPanel.setVisible(false);
!!!152247.java!!!	getInputPoint() : Point
		// TODO juiste error check maken ? exception ?
		String xValue = x.getText();
		String yValue = y.getText();

		if (xValue.length() != 0 && yValue.length() != 0) {
			return new Point(Integer.parseInt(xValue), Integer.parseInt(yValue));
		}

		return null;
!!!152375.java!!!	setSize() : void
		setBounds(0, 0, DisplaySize.CHOICEWIDTH, DisplaySize.CHOICEHEIGHT);
		// setMinimumSize( d );
		// setMaximumSize( d );
		// setPreferredSize( d );
!!!152503.java!!!	createInputField() : void
		JPanel inputFieldPanel = new JPanel();
		inputFieldPanel.setLayout(new BoxLayout(inputFieldPanel,
				BoxLayout.Y_AXIS));

		JPanel row = new JPanel();
		row.setLayout(new BoxLayout(row, BoxLayout.X_AXIS));
		x = createInput(row, "x");
		inputFieldPanel.add(row);

		inputFieldPanel.add(Box.createRigidArea(new Dimension(0, 5)));
		row = new JPanel();
		row.setLayout(new BoxLayout(row, BoxLayout.X_AXIS));
		y = createInput(row, "y");
		inputFieldPanel.add(row);

		inputFieldPanel.setBorder(BorderFactory.createTitledBorder("Input"));
		Dimension d = new Dimension(TOGGLEBUTTONWIDTH + 15,
				TOGGLEBUTTONHEIGHT * 4 + 20);
		inputFieldPanel.setMaximumSize(d);
		inputFieldPanel.setMinimumSize(d);
		inputFieldPanel.setPreferredSize(d);

		row = new JPanel();
		JButton button = new JButton("ADD");
		button.setToolTipText("Add control point to selected curve(s).");
		button.addActionListener(listener);
		row.add(button);
		row.add(Box.createHorizontalGlue());

		inputFieldPanel.add(row);
		add(inputFieldPanel);
!!!152631.java!!!	createInput(inout parent : JPanel, in textString : String) : JTextField
		// label aanmaken
		JLabel label = new JLabel("<html><span style='font-weight: bolder'>"
				+ textString + " : </span></html>: ");
		Dimension d = new Dimension(20, TOGGLEBUTTONHEIGHT);
		label.setMaximumSize(d);
		label.setMinimumSize(d);
		label.setPreferredSize(d);
		parent.add(label);

		// textinputveld aanmaken
		JTextField text = new JTextField();
		d = new Dimension(TOGGLEBUTTONWIDTH - 20, TOGGLEBUTTONHEIGHT);
		text.setMaximumSize(d);
		text.setMinimumSize(d);
		text.setPreferredSize(d);

		text.setBorder(BorderFactory.createLineBorder(Color.BLACK));
		parent.add(text);

		parent.add(Box.createRigidArea(new Dimension(5, 0)));

		return text;
!!!152759.java!!!	createComboBox() : void
		JPanel comboPanel = new JPanel();
		// comboPanel.setLayout(new BoxLayout(comboPanel, BoxLayout.Y_AXIS));
		// comboPanel.add(Box.createHorizontalGlue());

		type = new JComboBox(currentAlgTypeNames);
		type.setSelectedIndex(0);
		type.addActionListener(this);
		type.addActionListener(listener);
		Dimension d = new Dimension(210, TOGGLEBUTTONHEIGHT);
		type.setMaximumSize(d);
		type.setMinimumSize(d);
		type.setPreferredSize(d);
		comboPanel.add(type);

		comboPanel.add(Box.createRigidArea(new Dimension(5, 0)));

		container.add(type);
!!!152887.java!!!	createRadioPanel() : void
		container = new JPanel(); // zorgt voor de layout
		container.setLayout(new BoxLayout(container, BoxLayout.Y_AXIS));

		JPanel radioPanel = new JPanel();
		radioPanel.setLayout(new BoxLayout(radioPanel, BoxLayout.X_AXIS));
		ButtonGroup algGroep = new ButtonGroup();

		JRadioButton algName = new JRadioButton("Bezier");
		algName.setMnemonic(KeyEvent.VK_Z);
		algName.setSelected(true);
		algName.addActionListener(this);
		algName.addActionListener(listener);

		algGroep.add(algName);
		radioPanel.add(algName);

		algName = new JRadioButton("Hermite");
		algName.setMnemonic(KeyEvent.VK_T);
		algName.setSelected(false);
		algName.addActionListener(this);
		algName.addActionListener(listener);

		algGroep.add(algName);

		radioPanel.add(algName);
		radioPanel.add(Box.createHorizontalGlue());

		container.add(radioPanel);
		container.add(Box.createRigidArea(new Dimension(0, 5)));
		createComboBox();

		container.setBorder(BorderFactory.createTitledBorder("Algorithm"));
		container.add(Box.createRigidArea(new Dimension(5, 0)));

		add(container);
!!!153015.java!!!	createCheckBox() : void
		JPanel container = new JPanel(); // zorgt voor de uitlijning
		container.setLayout(new BoxLayout(container, BoxLayout.X_AXIS));

		checkPanel = new JPanel();
		checkPanel.setLayout(new BoxLayout(checkPanel, BoxLayout.Y_AXIS));

		createCheckBoxItem("Coordinates");
		createCheckBoxItem("Tangents");
		createCheckBoxItem("Numbers");

		// checkPanel toevoegen aan container + uitlijning verzorgen
		container.add(checkPanel);
		container.add(Box.createHorizontalGlue());

		container.add(Box.createHorizontalGlue());
		container.add(Box.createRigidArea(new Dimension(5, 0)));
		container.setBorder(BorderFactory.createTitledBorder("Show"));

		add(container);
!!!153143.java!!!	createCheckBoxItem(in name : String) : void
		JCheckBox item = new JCheckBox(name);
		item.addItemListener(itemListener);
		item.setSelected(false);
		checkPanel.add(item);
!!!153271.java!!!	createCurveEditeMode() : void
		curveEditPanel = new JPanel();
		curveEditPanel
				.setLayout(new BoxLayout(curveEditPanel, BoxLayout.Y_AXIS));
		group = new ButtonGroup();

		currentPanel = curveEditPanel;

		createButton("Start New Curve", "Start a new curve.", null, false);
		createButton("Select All Curves", "Select all curves.", null, false);
		createButton("Deselect All Curves", "Deselect all curves.", null, false);
		createButton("Add Control Point",
				"Add a control point to all selected curves.", null, false);
		createButton("Move Curves", "Move all selected curves.", null, false);
		createButton("Connect Curves (No Extra Points)",
				"Connect all selected curves (no extra points).", null, false);
		createButton("Connect Curves (C0)",
				"Connect all selected curves (C0).", null, false);
		createButton("Delete Curves", "Delete all selected curves.", null,
				false);
		// curveEditPanel.setBorder(BorderFactory.createTitledBorder("Edit"));
		container.add(curveEditPanel);
!!!153399.java!!!	createButton(in name : String, in tooltip : String, in icon : String, inout selected : boolean) : void
		JButton Button = new JButton(/* new ImageIcon(icon), */name);
		// toggleButton.setName(name);
		Button.addActionListener(listener);
		Button.setToolTipText(tooltip);
		Dimension d = new Dimension(TOGGLEBUTTONWIDTH, TOGGLEBUTTONHEIGHT);
		Button.setMaximumSize(d);
		Button.setMinimumSize(d);
		Button.setPreferredSize(d);
		group.add(Button);
		currentPanel.add(Button);
!!!153527.java!!!	createPointEditMode() : void
		pointEditPanel = new JPanel();
		pointEditPanel
				.setLayout(new BoxLayout(pointEditPanel, BoxLayout.Y_AXIS));
		group = new ButtonGroup();
		currentPanel = pointEditPanel;

		createButton("Deselect All Control Points",
				"Deselect all control points.", null, false);
		createButton("Move Control Points",
				"Move all selected control points.", null, false);
		createButton("Delete Control Points",
				"Delete all selected control poins.", null, false);
		// pointEditPanel.setBorder(BorderFactory.createTitledBorder("Edit"));
		container.add(pointEditPanel);
!!!153655.java!!!	createEditPanel() : void
		container = new JPanel();
		container.setLayout(new BoxLayout(container, BoxLayout.X_AXIS));
		container.add(Box.createHorizontalGlue());
		createCurveEditeMode();
		curveEditPanel.setVisible(false);
		createPointEditMode();
		pointEditPanel.setVisible(false);

		container.add(Box.createHorizontalGlue());
		container.add(Box.createRigidArea(new Dimension(5, 0)));
		container.setBorder(BorderFactory.createTitledBorder("Edit"));

		add(container);
!!!153783.java!!!	refresh() : void

!!!153911.java!!!	newPointInput() : Point
		return null;
!!!154039.java!!!	goToPoint() : Point
		return null;
!!!154167.java!!!	newPointClick() : Point
		return null;
!!!154295.java!!!	actionPerformed(inout e : ActionEvent) : void
		if (e.getActionCommand().equals("Bezier"))
			type.setModel(new DefaultComboBoxModel(bezierAlgTypeNames));
		else if (e.getActionCommand().equals("Hermite"))
			type.setModel(new DefaultComboBoxModel(hermiteAlgTypeNames));
